// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnikPedel.Infrastructure.Database;

#nullable disable

namespace UnikPedel.Infrastructure.Migrations
{
    [DbContext(typeof(UnikPedelContext))]
    [Migration("20220428233140_NewMigration")]
    partial class NewMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UnikPedel.Domain.Entities.Afdeling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EjendomId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Navn");

                    b.HasKey("Id");

                    b.HasIndex("EjendomId");

                    b.ToTable("Afdeling", (string)null);
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.AfdelingAnsvarlig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AfdelingId")
                        .HasColumnType("int");

                    b.Property<int>("ViceværtId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AfdelingId");

                    b.HasIndex("ViceværtId");

                    b.ToTable("AfdelingAnsvarlig", (string)null);
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Beboer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adresse");

                    b.Property<int>("AfdelingId")
                        .HasColumnType("int");

                    b.Property<string>("EfterNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EfterNavn");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Navn");

                    b.Property<int>("Telefon")
                        .HasColumnType("int")
                        .HasColumnName("Telefon");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("AfdelingId");

                    b.ToTable("Beboer", (string)null);
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BeboerId")
                        .HasColumnType("int");

                    b.Property<int>("GæsteLejlighedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SlutTid")
                        .HasColumnType("datetime2")
                        .HasColumnName("SlutTid");

                    b.Property<DateTime>("StartTid")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartTid");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("BeboerId");

                    b.HasIndex("GæsteLejlighedId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Ejendom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Ejendom", (string)null);
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Lejlighed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adresse");

                    b.Property<int>("AfdelingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AfdelingId");

                    b.ToTable("Lejlighed", (string)null);
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Rekvisition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("AntalTimer")
                        .HasColumnType("float")
                        .HasColumnName("AntalTimer");

                    b.Property<int>("BeboerId")
                        .HasColumnType("int");

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tekst");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("ViceværtId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeboerId");

                    b.HasIndex("ViceværtId");

                    b.ToTable("Rekvisition", (string)null);
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Vicevært", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EfterNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("efterNavn");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Navn");

                    b.Property<int>("Telefon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vicevært", (string)null);
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Afdeling", b =>
                {
                    b.HasOne("UnikPedel.Domain.Entities.Ejendom", "Ejendom")
                        .WithMany("Afdelinger")
                        .HasForeignKey("EjendomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ejendom");
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.AfdelingAnsvarlig", b =>
                {
                    b.HasOne("UnikPedel.Domain.Entities.Afdeling", "Afdeling")
                        .WithMany("AfdelingAnsvarlig")
                        .HasForeignKey("AfdelingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnikPedel.Domain.Entities.Vicevært", "Vicevært")
                        .WithMany("AfdelingAnsvarlig")
                        .HasForeignKey("ViceværtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afdeling");

                    b.Navigation("Vicevært");
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Beboer", b =>
                {
                    b.HasOne("UnikPedel.Domain.Entities.Afdeling", "Afdeling")
                        .WithMany("Beboer")
                        .HasForeignKey("AfdelingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afdeling");
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Booking", b =>
                {
                    b.HasOne("UnikPedel.Domain.Entities.Beboer", "Beboer")
                        .WithMany("Bookinger")
                        .HasForeignKey("BeboerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnikPedel.Domain.Entities.Lejlighed", "GæsteLejlighed")
                        .WithMany("Bookinger")
                        .HasForeignKey("GæsteLejlighedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beboer");

                    b.Navigation("GæsteLejlighed");
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Lejlighed", b =>
                {
                    b.HasOne("UnikPedel.Domain.Entities.Afdeling", "Afdeling")
                        .WithMany("Lejligheder")
                        .HasForeignKey("AfdelingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afdeling");
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Rekvisition", b =>
                {
                    b.HasOne("UnikPedel.Domain.Entities.Beboer", "Beboer")
                        .WithMany("Rekvisitioner")
                        .HasForeignKey("BeboerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnikPedel.Domain.Entities.Vicevært", "Vicevært")
                        .WithMany("Rekvisitioner")
                        .HasForeignKey("ViceværtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beboer");

                    b.Navigation("Vicevært");
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Afdeling", b =>
                {
                    b.Navigation("AfdelingAnsvarlig");

                    b.Navigation("Beboer");

                    b.Navigation("Lejligheder");
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Beboer", b =>
                {
                    b.Navigation("Bookinger");

                    b.Navigation("Rekvisitioner");
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Ejendom", b =>
                {
                    b.Navigation("Afdelinger");
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Lejlighed", b =>
                {
                    b.Navigation("Bookinger");
                });

            modelBuilder.Entity("UnikPedel.Domain.Entities.Vicevært", b =>
                {
                    b.Navigation("AfdelingAnsvarlig");

                    b.Navigation("Rekvisitioner");
                });
#pragma warning restore 612, 618
        }
    }
}
